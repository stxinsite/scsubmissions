We use stxexpfpga01 as a head node and compilation machine,
It also has two older Bittware 520N FPGAs plugged in, which we are no longer
using since they have only 40 Gbps links

We use stxexpfpga02 as the FPGA node.  It has four Bittware 520N-MX cards with 100 Gbps links,

the -environment files are the output from the SC provided collect-environment.sh file (copied here)

the -fpga files are the output from the Intel FPGA SDK command "aocl list-devices"

FPGA support software changes rapidly.  We have multiple versions installed and the work in the paper was done with IntelFPGA_pro 19.3 installed as /zfs/intelFPGA_pro/19.3/

Version information for the board support package is

[lstewart2@stxexpfpga01 environment]$ cat /zfs/intelFPGA_pro/19.3/hld/board/s10mx/version_info.txt 
Firmware repo commit hash : 2f65094b441334158b6475c616a3b493f1497670	refs/tags/1.7.0
Software repo commit hash : ff4a4e60e35c082e72b24a41bdc0d32b34c0067d	refs/tags/1.7.0
Documentation repo commit hash : f642e1dc746cd8e362dc8761407fb6794ef0ae3f	refs/tags/1.7.0
Intel example repo commit hash : ab3a338bb4fe253f1b1e35554d854faf249d5d35	refs/tags/q19.2.0
BittwWare example repo commit hash : ba547b6befa9ccb25ec7079b00fbe26c38c321c9	refs/tags/1.7.0


Third party software

Intel OpenCL SDK

https://www.intel.com/content/www/us/en/programmable/products/design-software/embedded-software-developers/opencl/support.html

Intel 2-D FFT OpenCL

https://www.intel.com/content/www/us/en/programmable/products/design-software/embedded-software-developers/opencl/support.html#designexamples

https://www.intel.com/content/www/us/en/programmable/support/support-resources/design-examples/design-software/opencl/fft-2d.html

(This 2D FFT appears to use the kernel that is also found in http://github.com/pc2/fft3d-fpga/fft3d-kernels/fft_8.cl)

We use the same .cl file for our FFT kernel.

Bittware Hardware

https://www.bittware.com/wp-content/uploads/datasheets/ds-520n-mx.pdf



Bittware BSP


https://www.bittware.com/fpga/opencl/



FFTW  (used only for checking hardware results, not in experiment flow)

http://www.fftw.org/

Python (used only for developing test datasets, using numpy, not in experiment flow)

GCC6.3  (for compiling host software, not in the line of experiment)